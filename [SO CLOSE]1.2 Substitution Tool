import enchant
import re
from collections import OrderedDict
from collections import Counter

d = enchant.Dict("en_us")
letters = ["e, t, a, o, i, n, s, h, r, d, l, c, u, m, w, f, g, y, p, b, v, k, j, x, q, z"]
let = ["e, t, a, o, i, n"]

line = "-----------------------------------------------------------"

def sortCipher():
    input = raw_input("Please input the cipher: ")#human input
    nondupe = "".join(OrderedDict.fromkeys(input))#removes duplicate characters
    print "Cipher characters: " + nondupe #
    new = input #Init replacement
    s = list(nondupe) #makes list of nondupe chars
    p = [] # empty list
    for i in range(len(s)):
        u = raw_input("What would you like to change " + s[i] + " to? ") #s[i] asking what would you like to change each character to
        print line
        p.append(u) 
        print p
        new = new.replace(s[i], u) #replaces old chars with new chars
        print input, " -- ", new
        print line
    return new

new = sortCipher()

b = Counter(new) #Counts how many of each char there is in NEW
print b
print line
print new
wordList = re.sub("[^\w]", " ", new).split()

for i in range(len(wordList)):#Spell Check
    hehe = d.check(wordList[i])#Spell Check

print "The spelling is: " + (str(hehe)) #Spell Check

makeList = list(b.elements()) #makes list of all letters used

common = Counter(makeList).most_common(6) #Shows most popular letters used

trial = str(common).strip('[]') #Changes to string and removes []
print trial

line = re.sub("[!@ '(),' '1234567890]", '', trial) #Removes numbers and the space
print line

space = " ".join(line[i:i+1] for i in range(0, len(line), 1)) #adds space inbetween each character
print space

redo = space.split() #puts it into list
print redo

"""mystring = "zxccv zvp bnx gvk ivtbg" """#Trying to automate letter swaps
"""print mystring

for word in redo:
    index = redo.index(word)

    mystring = mystring.replace(redo[index], let[index])

print mystring"""
